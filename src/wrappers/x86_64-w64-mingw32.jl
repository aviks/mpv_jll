# Autogenerated wrapper script for mpv_jll for x86_64-w64-mingw32
export mpv

using Libiconv_jll
using SDL2_jll
using Zlib_jll
using FFMPEG_jll
using Lua_jll
using JpegTurbo_jll
using Xorg_libXrandr_jll
using Xorg_libXinerama_jll
using Libglvnd_jll
using Xorg_libX11_jll
## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "PATH"
LIBPATH_default = ""

# Relative path to `mpv`
const mpv_splitpath = ["bin", "mpv.exe"]

# This will be filled out by __init__() for all products, as it must be done at runtime
mpv_path = ""

# mpv-specific global declaration
function mpv(f::Function; adjust_PATH::Bool = true, adjust_LIBPATH::Bool = true)
    global PATH, LIBPATH
    env_mapping = Dict{String,String}()
    if adjust_PATH
        if !isempty(get(ENV, "PATH", ""))
            env_mapping["PATH"] = string(PATH, ';', ENV["PATH"])
        else
            env_mapping["PATH"] = PATH
        end
    end
    if adjust_LIBPATH
        LIBPATH_base = get(ENV, LIBPATH_env, expanduser(LIBPATH_default))
        if !isempty(LIBPATH_base)
            env_mapping[LIBPATH_env] = string(LIBPATH, ';', LIBPATH_base)
        else
            env_mapping[LIBPATH_env] = LIBPATH
        end
    end
    withenv(env_mapping...) do
        f(mpv_path)
    end
end


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"mpv")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list
    # We first need to add to LIBPATH_list the libraries provided by Julia
    append!(LIBPATH_list, [Sys.BINDIR, joinpath(Sys.BINDIR, Base.LIBDIR, "julia"), joinpath(Sys.BINDIR, Base.LIBDIR)])
    # From the list of our dependencies, generate a tuple of all the PATH and LIBPATH lists,
    # then append them to our own.
    foreach(p -> append!(PATH_list, p), (Libiconv_jll.PATH_list, SDL2_jll.PATH_list, Zlib_jll.PATH_list, FFMPEG_jll.PATH_list, Lua_jll.PATH_list, JpegTurbo_jll.PATH_list, Xorg_libXrandr_jll.PATH_list, Xorg_libXinerama_jll.PATH_list, Libglvnd_jll.PATH_list, Xorg_libX11_jll.PATH_list,))
    foreach(p -> append!(LIBPATH_list, p), (Libiconv_jll.LIBPATH_list, SDL2_jll.LIBPATH_list, Zlib_jll.LIBPATH_list, FFMPEG_jll.LIBPATH_list, Lua_jll.LIBPATH_list, JpegTurbo_jll.LIBPATH_list, Xorg_libXrandr_jll.LIBPATH_list, Xorg_libXinerama_jll.LIBPATH_list, Libglvnd_jll.LIBPATH_list, Xorg_libX11_jll.LIBPATH_list,))

    global mpv_path = normpath(joinpath(artifact_dir, mpv_splitpath...))

    push!(PATH_list, dirname(mpv_path))
    # Filter out duplicate and empty entries in our PATH and LIBPATH entries
    filter!(!isempty, unique!(PATH_list))
    filter!(!isempty, unique!(LIBPATH_list))
    global PATH = join(PATH_list, ';')
    global LIBPATH = join(LIBPATH_list, ';')

    # Add each element of LIBPATH to our DL_LOAD_PATH (necessary on platforms
    # that don't honor our "already opened" trick)
    #for lp in LIBPATH_list
    #    push!(DL_LOAD_PATH, lp)
    #end
end  # __init__()

